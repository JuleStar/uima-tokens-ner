/*
 * This build file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/3.3/userguide/tutorial_java_projects.html
 */

// Apply the java plugin to add support for Java
apply plugin: 'java'

// In this section you declare where to find the dependencies of your project
repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    mavenLocal()
    jcenter()
}

configurations {
	prepare.extendsFrom(compile)
}

dependencies {
    // The production code uses Guava
    compile 'com.google.guava:guava:21.0'
	compile 'org.apache.uima:uimaj-core:2.10.0'
	compile "org.apache.uima:uimafit-core:2.3.0"
	compile 'com.google.guava:guava:21.0'
	compile 'fr.univ-nantes.julestar:uima-tokens-regex:1.4'
	compile 'fr.univ-nantes.termsuite:termsuite-core:3.0.4'
	
    // Use JUnit test framework
    testCompile 'junit:junit:4.12'
	testCompile "fr.univ-nantes.julestar:uima-test:1.0.0"
    
	// JCas type generation
	prepare "org.apache.uima:uimaj-tools:2.8.1"
    
}



task jcasgen(type: JavaExec) {
	description = 'Generate UIMA TS classes'
	ext.srcFile = file("$projectDir/src/main/resources/TokensNER_TS.xml")
	ext.outputDir = file("$projectDir/src/main/java")
	inputs.file srcFile
	outputs.dir outputDir
	classpath configurations.prepare
	// This ensures availability of type system imports
	// however, assumes that files are in desc subfolder
	systemProperty 'uima.datapath', "$projectDir/desc"
	main = 'org.apache.uima.tools.jcasgen.Jg'
	args = ['-jcasgeninput', srcFile, '-jcasgenoutput', outputDir]
}


// UIMA type system is needed for Java compile
compileJava.source jcasgen.outputs, sourceSets.main.java


